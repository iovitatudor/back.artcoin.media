import * as fs from 'node:fs';
import * as path from 'node:path';

const LIST_OF_WASMS = ['cep18.wasm'];

const PATH_FROM = path.resolve(
  __dirname,
  '../../../target/wasm32-unknown-unknown/release'
);
const PATH_TO = path.resolve(__dirname, '../wasm');

const convertFileContent = (base64: string) => `
  /* Autogenerated file. Do not edit manually. */
  /* eslint-disable eslint-comments/disable-enable-pair */
  /* eslint-disable eslint-comments/no-unlimited-disable */
  /* eslint-disable */
  /* prettier-ignore */

  import { decodeBase64 } from "casper-js-sdk";

  const base64 = "${base64}";
  const wasm = decodeBase64(base64);
  export default wasm;
`;

const runConversion = () => {
  fs.rmSync(PATH_TO, { recursive: true, force: true });
  fs.mkdirSync(PATH_TO);

  LIST_OF_WASMS.forEach(fileName => {
    const orgFileContent = fs.readFileSync(
      path.resolve(__dirname, `${PATH_FROM}/${fileName}`)
    );
    const base64 = orgFileContent.toString('base64');
    const convertedFileContent = convertFileContent(base64);
    const savedFilePath = path.resolve(
      __dirname,
      `../wasm/${fileName.split('.')[0]}.ts`
    );
    fs.writeFileSync(savedFilePath, convertedFileContent);
  });
};

runConversion();
